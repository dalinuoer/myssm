<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qh.mapper.BookInfoMapper" >
  <resultMap id="BaseResultMap" type="com.qh.model.BookInfo" >
    <id column="bookId" property="bookid" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="publish" property="publish" jdbcType="VARCHAR" />
    <result column="isbn" property="isbn" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="pubDate" property="pubdate" jdbcType="TIMESTAMP" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.qh.model.BookInfo" extends="BaseResultMap" >
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    bookId, name, author, publish, isbn, price, pubDate, createTime
  </sql>
  <sql id="Blob_Column_List" >
    introduction
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_info
    where bookId = #{bookid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from book_info
    where bookId = #{bookid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.qh.model.BookInfo" >
    insert into book_info (bookId, name, author, 
      publish, isbn, price, 
      pubDate, createTime, introduction
      )
    values (#{bookid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publish,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{pubdate,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, #{introduction,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qh.model.BookInfo" >
    insert into book_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        bookId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="publish != null" >
        publish,
      </if>
      <if test="isbn != null" >
        isbn,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="pubdate != null" >
        pubDate,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        #{bookid,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null" >
        #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="pubdate != null" >
        #{pubdate,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qh.model.BookInfo" >
    update book_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null" >
        publish = #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        isbn = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="pubdate != null" >
        pubDate = #{pubdate,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where bookId = #{bookid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qh.model.BookInfo" >
    update book_info
    set name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publish = #{publish,jdbcType=VARCHAR},
      isbn = #{isbn,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      pubDate = #{pubdate,jdbcType=TIMESTAMP},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where bookId = #{bookid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qh.model.BookInfo" >
    update book_info
    set name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publish = #{publish,jdbcType=VARCHAR},
      isbn = #{isbn,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      pubDate = #{pubdate,jdbcType=TIMESTAMP},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where bookId = #{bookid,jdbcType=BIGINT}
  </update>
  <!-- 查询图书列表 -->
  <select id="findBookInfoList" resultMap="BaseResultMap" parameterType="map" >
    select 
    *
    from book_info 
    <if test="name != null" >
        where name like "%"#{name,jdbcType=VARCHAR}"%"
    </if>
    limit #{rowNum},#{pageSize}
  </select>
  <!-- 查询图书数据总数 -->
  <select id="findBookInfoCount" resultType="int" parameterType="map" >
    select 
    count(*)
    from book_info 
  </select>
</mapper>